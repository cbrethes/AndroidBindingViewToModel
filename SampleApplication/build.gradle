
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        //classpath 'com.android.tools.build:gradle:1.3.0'
        //classpath 'com.android.tools.build:gradle:1.3.1'
        classpath 'com.android.tools.build:gradle:1.5.0'

        //classpath 'com.android.databinding:dataBinder:1.0-rc4'
        //classpath 'com.android.databinding:compilerCommon:1.0-rc4'
        classpath 'com.android.databinding:compiler:1.0-rc5'

    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
}

dependencies {
    compile 'com.android.support:support-v4:23.0.0'
    compile 'com.android.support:appcompat-v7:21.0.2'
    compile 'com.android.databinding:baseLibrary:1.0-rc5'
    compile 'com.android.databinding:adapters:1.0-rc5'
    compile project(':bindingviewtomodel')
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 23
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }
    dataBinding {
        enabled = true
    }

}















